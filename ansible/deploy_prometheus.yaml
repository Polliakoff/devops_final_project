- hosts: master-node
  tasks:
    - name: create prometheus role
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: prometheus
          rules:
          - apiGroups: [""]
            resources:
            - nodes
            - services
            - endpoints
            - pods
            verbs: ["get", "list", "watch"]
          - apiGroups: [""]
            resources:
            - configmaps
            verbs: ["get"]
          - nonResourceURLs: ["/metrics"]
            verbs: ["get"]

    - name: create prometheus service account
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: prometheus

    - name: create prometheus role binding
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: prometheus
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: prometheus
          subjects:
          - kind: ServiceAccount
            name: prometheus
            namespace: default

    - name: create prometheus configmap 1
      shell: |
        tee prometheus.yaml <<EOF
        global:
          scrape_interval: 5s
          evaluation_interval: 5s
        scrape_configs:
          - job_name: 'prometheus'
            static_configs:
              - targets: ['localhost:9090']
          - job_name: 'python-app'
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app]
                regex: webapp
                action: keep
         EOF
      args:
        chdir: $HOME
        creates: prometheus.yaml

    - name: create prometheus configmap 2
      shell: |
        kubectl create configmap prometheus-config --from-file prometheus.yaml
        touch configmap_created.txt
      args:
        chdir: $HOME
        creates: configmap_created.txt

    - name: create prometheus deployment
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: prometheus-deployment
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: prometheus
            template:
              metadata:
                labels:
                  app: prometheus
              spec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: workload
                          operator: In
                          values:
                          - webapp
                containers:
                - name: prometheus-cont
                  image: prom/prometheus
                  args:
                      - "--config.file=/etc/prometheus/prometheus.yaml"
                  volumeMounts:
                  - name: config-volume
                    mountPath: /etc/prometheus/prometheus.yaml
                    subPath: prometheus.yaml
                  ports:
                  - containerPort: 9090
                volumes:
                - name: config-volume
                  configMap:
                    name: prometheus-config
                serviceAccountName: prometheus

    - name: create prometheus service
      kubernetes.core.k8s:
        state: present
        definition:
          kind: Service
          apiVersion: v1
          metadata:
            name: prometheus-service
          spec:
            selector:
              app: prometheus
            ports:
            - name: promui
              nodePort: 30900
              protocol: TCP
              port: 9090
              targetPort: 9090
            type: NodePort
